#!/bin/bash

usage()
{
    echo "Usage: $0 -t top_dir_num -m mid_dir_num -b bottom_dir_num -f file_num" >&2
    exit 1
}


genfolder()
{
    local index=$1
    local TOP_DIR=$2
    local MID_DIR=$3
    local BOTTOM_DIR=$4
    local top=$((index/MID_DIR/BOTTOM_DIR))
    local mid=$((index%(MID_DIR*BOTTOM_DIR)/BOTTOM_DIR))
    local bottom=$((index%(MID_DIR*BOTTOM_DIR)%BOTTOM_DIR))

    mkdir -p $top/$mid/$bottom
}

export -f genfolder 


genfile()
{

    local index=$1
    local TOP_DIR=$2
    local MID_DIR=$3
    local BOTTOM_DIR=$4
    local FILE_NUM=$5

    local top=$((index/MID_DIR/BOTTOM_DIR/FILE_NUM))
    local mid=$((index%(MID_DIR*BOTTOM_DIR*FILE_NUM)/BOTTOM_DIR/FILE_NUM))
    local bottom=$((index%(MID_DIR*BOTTOM_DIR*FILE_NUM)%(BOTTOM_DIR*FILE_NUM)/FILE_NUM))
    local file=$((index%(MID_DIR*BOTTOM_DIR*FILE_NUM)%(BOTTOM_DIR*FILE_NUM)%FILE_NUM))

    echo $index  $top $mid $bottom $file

    dd if=/dev/zero of=$top/$mid/$bottom/$file bs=1M count=1 > /dev/null 2>&1
}

export  -f genfile 


TOP_DIR=
MID_DIR=
BOTTOM_DIR=
FILE_NUM=

while getopts :t:m:b:f:?h opt
do
    case $opt in 
        t)  TOP_DIR=$OPTARG
            ;;
        m)  MID_DIR=$OPTARG
            ;;
        b)  BOTTOM_DIR=$OPTARG
            ;;
        f)  FILE_NUM=$OPTARG
            ;;
        h|?)  usage      
            ;;
        '?')
            echo "$0:Invalid option -$OPTARG" >&2
            usage
            ;;
    esac
done

shift $((OPTIND - 1))

if [ -z "$TOP_DIR" -o -z "$MID_DIR" -o -z "$BOTTOM_DIR" -o -z "$FILE_NUM" ]
then
    usage
fi


folder_total=$((TOP_DIR*MID_DIR*BOTTOM_DIR))
seq 0 $((folder_total-1)) | shuf | xargs  -I{}  -P 100 bash -c "genfolder {} $TOP_DIR $MID_DIR $BOTTOM_DIR"

total=$((TOP_DIR*MID_DIR*BOTTOM_DIR*FILE_NUM))
seq 0 $((total-1)) | shuf  | xargs -I {}  -P 800  bash -c "genfile {} $TOP_DIR $MID_DIR $BOTTOM_DIR $FILE_NUM"

